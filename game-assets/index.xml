<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Game Assets on PinGod.VP Examples</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/game-assets/</link><description>Recent content in Game Assets on PinGod.VP Examples</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 17 Oct 2017 15:26:15 +0000</lastBuildDate><atom:link href="https://horseyhorsey.github.io/PinGod.VP.Examples/game-assets/index.xml" rel="self" type="application/rss+xml"/><item><title>Assets - Audio Manager</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/game-assets/audiomanager/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/game-assets/audiomanager/</guid><description>Helper class for audio.
note: if you want the finished signal on audio to work when the file is an ogg, the loop must be unchecked then reimported from the import tab
SfxAssets VoiceAssets MusicAssets _EnterTree Initializes the AudioStreamPlayers. Loads sound pack resources and adds any assets found into the provided dictionaries. Will try and load a pingod.snd.pck asset file, tries res://pingod.snd.pck first, then the working directory Methods PinGodGame has wrapped some of the common methods so you can use a PinGodGame reference to do audio controls, playing audio, music, voices.</description></item><item><title>Assets - Video</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/game-assets/video/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/game-assets/video/</guid><description>Notes and reminders on some assets and modes.
Videos Video format .Webm is buggy windows? and have had better results with .ogv.
FFMPEG: Converting video examples Using FFMPEG when converting from mp4 this file will be twice the size of the mp4 (6)
ffmpeg -i input.mp4 -c:v libtheora -qscale:v 6 -c:a libvorbis -qscale:a 6 outputname.ogv
Take 10 seconds of video starting at 12 seconds * This lower quality (3) will produce about the same size as the mp4*</description></item></channel></rss>