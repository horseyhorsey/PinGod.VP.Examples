<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on PinGod.VP Examples</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/</link><description>Recent content in Home on PinGod.VP Examples</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 19 Oct 2017 15:26:15 +0000</lastBuildDate><atom:link href="https://horseyhorsey.github.io/PinGod.VP.Examples/index.xml" rel="self" type="application/rss+xml"/><item><title>ScoreMode - Scene</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/modes/score-mode/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/modes/score-mode/</guid><description>Basic Score Mode for multi players. Game/Modes/ScoreMode
Exports (ScoreMode.cs) _single_player_p1_visible = false . Show Player ones ScoreP1 label if set to true. Normally in a pinball the scorep1 would not display with main score unless multi-player _show_main_score_multiplayer = true Select NodePaths for the following export properties. A NodePath here should be a label that is added to your layout. If you have 8 players then create 8 labels and add them to the array in godot editor.</description></item><item><title>Bonus</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/modes/bonus-mode/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/modes/bonus-mode/</guid><description>Bonus scene used in BasicGame Game.tscn Modes.
StartBonusDisplay is used from the Game.OnBallEnded if the game isn&amp;rsquo;t tilted. So you can override this with your own.
Scene Tree breadown backgroundColor pingod-logo = sprite Label Timer = 1 second
Exports Default Text Display For Seconds Overrides _EnterTree sets Timer and Label If no _defaultText is available it uses translated BONUS_EOB _Ready Finds Trough scene Gets Timer and BlinkingLabel from scene tree _Input Watches actions for tilt, slam_tilt Both tilting actions disable flippers and ball saves.</description></item><item><title>Installation</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/getting-started/installation/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/getting-started/installation/</guid><description>Download Godot editor Editor at https://godotengine.org/ . You can put this wherever you like.
Godot is portable (no installation required) (Version 3.4 cSharp MONO as of this document)
Clone PinGod.VP.Examples Clone or make your own fork then clone the repository with command:
git clone https://github.com/horseyhorsey/PinGod.VP.Examples</description></item><item><title>MachineConfig (Items)</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/pingodgame/items/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/pingodgame/items/</guid><description>In the game/PinGodGame.tscn scenes inspector in Godot editor you can edit the machines Coils, Switches, Lamps, Leds.
This can be accessed from the MachineConfig scene by selecting it.
When the game is loaded these items will be added to the machine.
They can be accessed inside the Machine.cs or use the PinGodGame helper methods with the item name.
When adding from the UI (green box) select String and Int for the value but it&amp;rsquo;s probably quicker to edit this file in text and add your items there with name and number.</description></item><item><title>Main Scene</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/base-scenes/mainscene/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/base-scenes/mainscene/</guid><description>This scene is the first to be loaded as a base display set in the projects settings and the scene is never removed from the game, but can add / remove modes like removing the Attract then adding a Game scene.
The first scene can also be found in the project.godot file. run/main_scene=&amp;quot;res://game/MainScene.tscn&amp;quot;
The PinGodAddOns test project loads a Node2D scene instead run/main_scene=&amp;quot;res://Node2D.tscn and doesn&amp;rsquo;t use a base script.
BasicGame - MainScene.</description></item><item><title>Score Entry</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/modes/score-entry-mode/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/modes/score-entry-mode/</guid><description>Basic Score mode with charachter selection for players at end of game
Scene Tree breadown ColorRect = Black background color SelectedChar Label = HI_SCORE_ENTRY CenterContainer = Shows selected char center screen ColorRect2 = used as red marker under a letter Exports (ScoreEntry.cs) _includeZeroToNine _nameMaxLength _playerMessage _selectCharMargin = space when changing between chars with flippers _selectedChar Overrides _Ready Sets IsPlayerEnteringScore to true quits the scene if no players or MoveNextPlayer</description></item><item><title>Switches to Actions</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/machine/switchesactions/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/machine/switchesactions/</guid><description>Switches Godot uses Actions so you can assign input controls to them.
In the projects Input Map add switches like the example below.
Switch numbers convert to these actions sw{number} and you can assign keyboard to test game switches directly in the window.
About An action comes into Godot like this so we know it&amp;rsquo;s a switch and act on the switch name
You can create any action here and trigger it from a simulator controller.</description></item><item><title>Tilt Mode Scene</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/modes/tilt-mode/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/modes/tilt-mode/</guid><description>Base Tilt scene to act on any machine tilting actions and displaying
Scene Tree breadown background CenterContainer &amp;gt; BlinkingLabel = Shows the tilt messages Timer = 2 second One Shot timer
Exports Num Tilt Warnings = Warning before titlt , default = 2
Overrides _Ready Finds Trough scene Gets Timer and BlinkingLabel from scene tree _Input Watches actions for tilt, slam_tilt Both tilting actions disable flippers and ball saves.</description></item><item><title>Menu Title</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/post/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/post/creating-a-new-theme/</guid><description>Introduction</description></item><item><title>Hello world!</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/hello_world/</link><pubDate>Tue, 17 Oct 2017 14:00:45 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/hello_world/</guid><description>Hello world!</description></item><item><title>Hello_world</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/posts/hello_world/</link><pubDate>Tue, 17 Oct 2017 14:00:45 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/posts/hello_world/</guid><description>aaaaaa
vvvv
aaa</description></item><item><title>Configuration</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/getting-started/configuration/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/getting-started/configuration/</guid><description>Godot Environment paths You should rename the Godot executable to godot and add to Environment paths on your system for access ease and scripts to use.</description></item><item><title>Launching</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/getting-started/launching/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/getting-started/launching/</guid><description>Launching BasicGameGodot _create_addons_link.bat Run to create a symbolic link to the addons directory in the BasicGameGodot project or in any game.
You can copy the addons directory to your project if you needed to though. To run the BasicGame you will need the addOns directory linked or copied.
BasicGame The BasicGameGodot project can be loaded in the Godot editor by browsing in Godot but it is quicker to load into the editor via the file explorer or command line.</description></item><item><title>Ball Trough (Scene)</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/pingodgame/trough/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/pingodgame/trough/</guid><description>Trough Class Reference
Included in the examples PinGodGame.tscn tree.
Most cases you will leave the default settings here, but you can add more switches from this.
Ball search options Enabled Ball Search coils to pulse (usually saucers, scoops not the trough) Search stop switches = Switches that stop the search Search wait time = Time to wait before pulsing coils Trough / Ball Save Options Ball save seconds Ball save lamp name Ball save multiball seconds Early Ball Save switches Number of Balls to Save Trough Solenoid(coil) Trough switches Plunger lane switch Set what to do on ball started</description></item><item><title>AudioManager</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/pingodgame/audiomanager/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/pingodgame/audiomanager/</guid><description>AudioManager Class Reference
Add global music, sfx, voice sounds.
See AudioManager</description></item><item><title>Overlays (Developing)</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/pingodgame/devoverlays/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/pingodgame/devoverlays/</guid><description>Scenes to overlay on screen like switches and light states
Lamp Overlay Enabled This enables the LampMatrix in the DevOverlays. Options are available on the LampMatrix to change coloumns and count. Customize in your own game if need more advanced.
Switch Overlay Enabled This enables the SwitchOverlay in the DevOverlays. Options are available on the SwitchOverlay to change coloumns.
Switches can be clicked on screen.</description></item><item><title>Using Switches (Godot)</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/machine/usingswitches/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/machine/usingswitches/</guid><description>Using in game scene scripts Override _Input(InputEvent @event)
Check if a switch has just been triggered on / off. This mode would use a pinGod game reference to do so.
//pinGod is a reference to the PinGodGame if (pinGod.SwitchOn(&amp;quot;inlane_l&amp;quot;, @event)) { AddPoints(100); } Check a switch state anywhere bool isInlaneOn = pinGod.SwitchOn(&amp;quot;inlane_l&amp;quot;);</description></item><item><title>Assets - Audio Manager</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/game-assets/audiomanager/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/game-assets/audiomanager/</guid><description>Helper class for audio.
note: if you want the finished signal on audio to work when the file is an ogg, the loop must be unchecked then reimported from the import tab
SfxAssets VoiceAssets MusicAssets _EnterTree Initializes the AudioStreamPlayers. Loads sound pack resources and adds any assets found into the provided dictionaries. Will try and load a pingod.snd.pck asset file, tries res://pingod.snd.pck first, then the working directory Methods PinGodGame has wrapped some of the common methods so you can use a PinGodGame reference to do audio controls, playing audio, music, voices.</description></item><item><title>Assets - Video</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/game-assets/video/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/game-assets/video/</guid><description>Notes and reminders on some assets and modes.
Videos Video format .Webm is buggy windows? and have had better results with .ogv.
FFMPEG: Converting video examples Using FFMPEG when converting from mp4 this file will be twice the size of the mp4 (6)
ffmpeg -i input.mp4 -c:v libtheora -qscale:v 6 -c:a libvorbis -qscale:a 6 outputname.ogv
Take 10 seconds of video starting at 12 seconds * This lower quality (3) will produce about the same size as the mp4*</description></item><item><title>Attract Scene</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/base-scenes/attractscene/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/base-scenes/attractscene/</guid><description>TODO</description></item><item><title>BallStackPinball (Timer)</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/tools/ballstackpinball/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/tools/ballstackpinball/</guid><description>Basic way to use a Timer as a Saucer or Kicker, the scene using this control should connect to the switch signals sent from them. See BasicGame
Tool: BallStackPinball derives from a Timer and can be used in scenes and adding them from filtering in the Godot editor.
Exports Coil = coil sname to pulse Switch = switch name that activates One Shot = true Autostart = false
Godot - Overrides BALL_SAVE_SCENE = &amp;ldquo;res://addons/PinGodGame/Modes/ballsave/BallSave.</description></item><item><title>BaseMode (BasicGame)</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/modes/base-mode/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/modes/base-mode/</guid><description>This BaseMode scene is loaded in the Game.tscn Modes scene used in the BasicGame project. A basic mode which has a saucer (kicker) and starts multiball when active.
BaseMode.tscn Exports BALL_SAVE_SCENE = &amp;ldquo;res://addons/PinGodGame/Modes/ballsave/BallSave.tscn&amp;rdquo;;
BallStackPinball In Node / Signals pane we have connected signals to the BallStackPinball scene
Here&amp;rsquo;s what it looks like connected inside a .tscn. The methods are inside the BaseMode.cs script.
[connection signal=&amp;quot;SwitchActive&amp;quot; from=&amp;quot;BallStackPinball&amp;quot; to=&amp;quot;.&amp;quot; method=&amp;quot;OnBallStackPinball_SwitchActive&amp;quot;] [connection signal=&amp;quot;timeout&amp;quot; from=&amp;quot;BallStackPinball&amp;quot; to=&amp;quot;.</description></item><item><title>BlinkingLabel (Label)</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/tools/blinkinglabel/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/tools/blinkinglabel/</guid><description>A label that blinks on a timer with optional methods for controlling the blink</description></item><item><title>Exporting</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/exporting/exports/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/exporting/exports/</guid><description>This would be yout final step but this isn&amp;rsquo;t necessary for developing / debugging games. These exports can be used without Godot.
See the export_presets.cfg file for icons, names, exporting.
Before Exporting Checklists Project settings Are the Recordings / Playback / Overlays switched off? Simulator Script VP Script change to Debug=False VP Script change path to ./GameExecutable - If game is packaged with table in the same directory the player only has to run the game in Visual Pinball Helps to have a copy of the release table in the export path to test exports and keeping your debug table</description></item><item><title>Game Scene</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/base-scenes/gamescene/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/base-scenes/gamescene/</guid><description>This scene is loaded from the attract mode. (Add to favorites for quick access)
Add scenes to the modes CanvasLayer to use in game or add to from script
Default Modes (CanvasLayer) ScoreMode [[ScoreMode.tscn ScoreMode.cs|06a.-ScoreMode]]
BaseMode Set the Ball Save Scene [[BaseMode.tscn BaseMode.cs|06b.-BaseMode]]
Bonus Set the default text and display time [[Bonus.tscn Bonus.cs|06c.-Bonus]]
Tilt Set number of tilt warnings [[Tilt.tscn Tilt.cs|06d.-Tilt]]
ScoreEntry Scene to show when player is entering a score [[ScoreEntry.</description></item><item><title>Language files</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/languages/attractscene/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/languages/attractscene/</guid><description>Add translations for the game. There are also defaults to cover most standard pinball messages in addons/PinGodGame/Localization
The default example covers English and French in pindog_default_lang.csv.
Files YourGame/local BasicGameLang.csv
keys,en MY_MSG,Add key values for lanuguages Usage Godot Scripts These can be used in Godot script by using the translation method Tr(&amp;quot;EXTRA_BALL&amp;quot;)
_defaultText = Tr(&amp;quot;BONUS_EOB&amp;quot;);
Replacing placeholders CSV
HI_SCORE_ENTRY,PLAYER %d\r\nENTER NAME,JOUEUR %d\r\nENTRER LE NOM
SCRIPT
playerMessageLabel.Text = Tr(&amp;quot;HI_SCORE_ENTRY&amp;quot;).Replace(&amp;quot;%d&amp;quot;, (CurrentPlayer + 1).ToString());</description></item><item><title>PinballLanesNode (PinGodGameMode:Node)</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/tools/pinballlanesnode/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/tools/pinballlanesnode/</guid><description>Set the exports in the scene from Godot or tscn. and other options.</description></item><item><title>PinballTargetsBank (Node)</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/tools/pinballtargetsbank/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/tools/pinballtargetsbank/</guid><description>Handles a bank of targets, the light states and watches for completion</description></item><item><title>PinGodGame.tscn - Scene</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/pingodgame/pingodgame.tscn/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/pingodgame/pingodgame.tscn/</guid><description>res:// paths for assets Quicker to add asset paths here</description></item><item><title>Using Switches (Controller)</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/machine/usingswitchescontroller/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/machine/usingswitchescontroller/</guid><description>(Scripting) Visual Pinball - Switch On / Off Sub sw_plunger_lane_hit() : Controller.Switch 20, 1 : End Sub Sub sw_plunger_lane_unhit() : Controller.Switch 20, 0 : End Sub Sub sw_spinner_spin() : Controller.Switch 21, 0 : End Sub Auto Switch handlers (No scripting) In the BasicGame, Visual Pinball table switches are added to a simulator collection named AllSwitches.
Add the switch number to the TimerInterval box in the objects settings and add the switch to the AllSwitches collection.</description></item><item><title>VideoPlayerPinball (VideoPlayer)</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/tools/videoplayerpinball/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/tools/videoplayerpinball/</guid><description>VideoPlayerPinball (AddOn) This helper node for video has options to set looping and other in the inspector when added to the tree.
Tool: This can be added with Create New Node and searching in godot editor for control VideoPlayerPinball
Adding VideoPlayerPinball to Attract Mode 1. Using a duplicated BasicGame as starter project Open project with Godot Find the Attract.tscn in the addons res://addons/Modes/attract, right click and duplicate and give it a name, CustomAttract.</description></item><item><title>PinGodGame.cs - Script</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/pingodgame/pingodgame.cs/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/pingodgame/pingodgame.cs/</guid><description>This script is autoloaded from the scene when the display window is launched and has many methods.
Modes and other scenes can get access to this from the root tree. GetNode&amp;lt;PinGodGame&amp;gt;(&amp;quot;/root/PinGodGame&amp;quot;).
Godot - Overrides _EnterTree = Gets user cmd line args, loads data and settings, creates trough, sets up ball search and audio manager
_Ready = Game initialized. Memory map is created here if read and write is enabled. Gets BallSearchOptions, sets up a _lampMatrixOverlay Gets hold of the MainScene to control window size, stretch</description></item><item><title>Logging Games</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/pingodgame/logging/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/pingodgame/logging/</guid><description>Game logging
Class Reference
void LogDebug(params object[] what); void LogInfo(params object[] what); void LogWarning(string message = null, params object[] what); void LogError(string message = null, params object[] what); PinGodLogLevel LogLevel { get; } For example:
pinGod.LogInfo(&amp;quot;my message&amp;quot;);
Log location In the game name appdata directory. Use the open_app_data.bat to open directory instead of looking for it.</description></item><item><title>Using Coils (Godot)</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/machine/usingcoils/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/machine/usingcoils/</guid><description>Coils can be On, Off or Pulsed. Get a reference to pinGod and use methods with name.
pinGod.SolenoidPulse(&amp;quot;trough&amp;quot;, 225); pinGod.SolenoidOn(&amp;quot;trough&amp;quot;, 1); pinGod.SolenoidOn(&amp;quot;trough&amp;quot;, 0); pinGod.SolenoidPulse(&amp;quot;auto_plunger&amp;quot;)// Pulse the auto plunger pinGod.SolenoidOn(&amp;quot;flippers&amp;quot;, 1) // enable the flippers</description></item><item><title>Using Coils (Controller)</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/machine/usingcoilscontroller/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/machine/usingcoilscontroller/</guid><description>Visual Pinball SolCallbacks When Visual Pinball detects changed coils the callbacks are invoked by coil number.
The script example to handle coil 35 would be SolCallback(35) = &amp;quot;Lampshow2&amp;quot;. This will invoke the LampShow2 sub routine (if you have one)
Some standard callbacks for default game:
SolCallback(0) = &amp;quot;Died&amp;quot; ' If at some point Godot closes then this lets VP know about it SolCallback(1) = &amp;quot;bsTrough.solOut&amp;quot; ' The trough which makes the ball pop out.</description></item><item><title>Recording / Playback</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/pingodgame/recordings-playback/</link><pubDate>Tue, 17 Oct 2017 15:26:15 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/pingodgame/recordings-playback/</guid><description>Quick guide on how to record and playback a game. Recording a game can speed up your game development for game logic.
They would usually start off by using trough switches adding credits and starting a game, then any events after this to test any recorded sequence.
Recording Recording files are saved in the user://recordings/recordname.record
Example game dir: C:\Users\UserName\AppData\Roaming\Godot\app_userdata\BasicGameGodot\recordings
&amp;nbsp;Note You can get to the app_data directory for the game using app_data bat file</description></item><item><title>Hello_world2</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/archives/hello_world2/</link><pubDate>Sun, 17 Dec 2017 14:00:45 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/archives/hello_world2/</guid><description>aaaaaa
vvvv
aaa</description></item><item><title>Hello_world2</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/blog/hello_world2/</link><pubDate>Sun, 17 Dec 2017 14:00:45 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/blog/hello_world2/</guid><description>aaaaaa
vvvv
aaa</description></item><item><title>Hello_world2</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/entry/hello_world2/</link><pubDate>Sun, 17 Dec 2017 14:00:45 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/entry/hello_world2/</guid><description>aaaaaa
vvvv
aaa</description></item><item><title>Hello_world1</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/archives/hello_world1/</link><pubDate>Fri, 17 Nov 2017 14:00:45 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/archives/hello_world1/</guid><description>aaaaaa
vvvv
aaa</description></item><item><title>Hello_world1</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/blog/hello_world1/</link><pubDate>Fri, 17 Nov 2017 14:00:45 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/blog/hello_world1/</guid><description>aaaaaa
vvvv
aaa</description></item><item><title>Hello_world1</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/entry/hello_world1/</link><pubDate>Fri, 17 Nov 2017 14:00:45 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/entry/hello_world1/</guid><description>aaaaaa
vvvv
aaa</description></item><item><title>Hello_world</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/archives/hello_world/</link><pubDate>Tue, 17 Oct 2017 14:00:45 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/archives/hello_world/</guid><description>aaaaaa
vvvv
aaa</description></item><item><title>Hello_world</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/blog/hello_world/</link><pubDate>Tue, 17 Oct 2017 14:00:45 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/blog/hello_world/</guid><description>aaaaaa
vvvv
aaa</description></item><item><title>Hello_world</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/entry/hello_world/</link><pubDate>Tue, 17 Oct 2017 14:00:45 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/entry/hello_world/</guid><description>aaaaaa
vvvv
aaa</description></item><item><title>About PinGod</title><link>https://horseyhorsey.github.io/PinGod.VP.Examples/about/</link><pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate><guid>https://horseyhorsey.github.io/PinGod.VP.Examples/about/</guid><description>Pinball game framework</description></item></channel></rss>